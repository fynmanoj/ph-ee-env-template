# Deploy singleton instance in the whole cluster for some unique data sources, like aws input
{{- if .Values.operations.enabled -}}

apiVersion: {{ .Values.deployment.apiversion }}
kind: Deployment
metadata:
  name: {{ template "ph-ee-operations-app.fullname" . }}
  labels:
    app: {{ template "ph-ee-operations-app.fullname" . }}
spec:
  replicas: {{ .Values.operations_app.replicas }}
  selector:
    matchLabels:
      app: {{ template "ph-ee-operations-app.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "ph-ee-operations-app.fullname" . }}
      annotations:
{{- if .Values.operations_app.deployment.annotations }}
{{ toYaml .Values.operations_app.deployment.annotations | indent 8 }}
{{- end }}
        # {{- if or  .Values.operations_appConfig .Values.operations_app.deployment.ph-ee-zeebe-opsConfig }}
        # configChecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        # {{- end }}
    spec:
      affinity: {{ toYaml .Values.operations_app.deployment.affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Values.operations_app.deployment.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml ( .Values.operations_app.tolerations | default .Values.operations_app.deployment.tolerations ) | nindent 8 }}
      {{- if .Values.operations_app.priorityClassName }}
      priorityClassName: {{ .Values.operations_app.priorityClassName  }}
      {{- end }}
      serviceAccountName: {{ template "ph-ee-operations-app.serviceAccount" . }}
      terminationGracePeriodSeconds: {{ .Values.operations_app.terminationGracePeriod }} 

      containers:
        - name: ph-ee-operations-app
          image: "{{ .Values.operations_app.image }}:{{ .Values.operations_app.imageTag }}"
          imagePullPolicy: "{{ .Values.operations_app.imagePullPolicy }}"
          resources: {{ toYaml ( .Values.operations_app.resources | default .Values.operations_app.deployment.resources ) | nindent 10 }}
          ports:
            - containerPort: 5000
    {{- if .Values.operations_app.imagePullSecrets }}
          imagePullSecrets:
    {{ toYaml .Values.operations_app.imagePullSecrets | indent 8 }}
        {{- end }}
          livenessProbe:
{{ toYaml .Values.operations_app.livenessProbe | indent 10 }}
          readinessProbe:
{{ toYaml .Values.operations_app.readinessProbe | indent 10 }}   
          env:
            - name: "FINERACT_DATASOURCE_CORE_USERNAME"
              value: "{{ .Values.operations_app.datasource.username }}" 
            - name: "FINERACT_DATASOURCE_CORE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "operations-app-secret"
                  key: "database-password"
            - name: "FINERACT_DATASOURCE_CORE_HOST"
              value: "{{ .Values.operations_app.datasource.host }}"
            - name: "FINERACT_DATASOURCE_CORE_PORT"
              value: "{{ .Values.operations_app.datasource.port }}"
            - name: "FINERACT_DATASOURCE_CORE_SCHEMA"
              value: "{{ .Values.operations_app.datasource.schema }}"
            - name: "SPRING_PROFILES_ACTIVE"
              value: "{{ .Values.operations_app.SPRING_PROFILES_ACTIVE }}"
            - name: "TOKEN_CLIENT_CHANNEL_SECRET"
              value: "{{ .Values.operations_app.token_client_channel_secret }}"
            - name: "TENANTS"
              value: "{{ .Values.operations_app.tenants }}"
            - name: "LOGGING_LEVEL_ROOT"
              value: "{{ .Values.operations_app.LOGGING_LEVEL_ROOT }}"
            - name: "LOGGING_PATTERN_CONSOLE"
              value: "{{ .Values.operations_app.LOGGING_PATTERN_CONSOLE }}"
{{- if .Values.operations_app.extraEnvs | default .Values.operations_app.deployment.extraEnvs }}
{{ toYaml ( .Values.operations_app.extraEnvs | default .Values.operations_app.deployment.extraEnvs ) | indent 8 }}
{{- end }}
          envFrom: {{ toYaml ( .Values.operations_app.envFrom | default .Values.operations_app.deployment.envFrom ) | nindent 10 }}
          securityContext: {{ toYaml ( .Values.operations_app.podSecurityContext | default .Values.operations_app.deployment.securityContext ) | nindent 10 }}
          volumeMounts:
            - name: ph-ee-config
              mountPath: "/config"
{{- if .Values.operations_app.deployment.config }}
{{ toYaml .Values.operations_app.deployment.config | indent 12 }}
{{- end }}    
      {{- if .Values.extraInitContainers }}
      initContainers:
      # All the other beats accept a string here while
      # operations_app accepts a valid yaml array. We're keeping
      # this as a backwards compatible change, while adding
      # also a way to pass a string as other templates to
      # make these implementations consistent.
      # https://github.com/elastic/helm-charts/issues/490
        - name: wait-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          args:
            - -timeout=120s
            - -wait
            - tcp://{{ .Values.operations_app.datasource.host }}:3306
      volumes:
        - name: ph-ee-config
          configMap:
            name: ph-ee-config
      {{- if .Values.operations_app.extraVolumeMounts | default .Values.operations_app.deployment.extraVolumeMounts }}
  {{ toYaml ( .Values.operations_app.extraVolumeMounts | default .Values.operations_app.deployment.extraVolumeMounts ) | indent 8 }}
          {{- end }}
        {{- if .Values.operations_app.extraContainers }}
  {{ tpl .Values.operations_app.extraContainers . | indent 6 }}
        {{- end }}          

{{- end }}
