# Deploy singleton instance in the whole cluster for some unique data sources, like aws input
{{- if .Values.zeebe_ops.enabled -}}

apiVersion: {{ .Values.deployment.apiversion }}
kind: Deployment
metadata:
  name: {{ template "ph-ee-zeebe-ops.fullname" . }}
  labels:
    app: {{ template "ph-ee-zeebe-ops.fullname" . }}
spec:
  replicas: {{ .Values.zeebe_ops.replicas }}
  selector:
    matchLabels:
      app: {{ template "ph-ee-zeebe-ops.fullname" . }}s
  template:
    metadata:
      labels:
        app: {{ template "ph-ee-zeebe-ops.fullname" . }}
      annotations:
{{- if .Values.zeebe_ops.deployment.annotations }}
{{ toYaml .Values.zeebe_ops.deployment.annotations | indent 8 }}
{{- end }}
    spec:
      affinity: {{ toYaml .Values.zeebe_ops.deployment.affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Values.zeebe_ops.deployment.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml ( .Values.zeebe_ops.tolerations | default .Values.zeebe_ops.deployment.tolerations ) | nindent 8 }}
      {{- if .Values.zeebe_ops.priorityClassName }}
      priorityClassName: {{ .Values.zeebe_ops.priorityClassName  }}
      {{- end }}
      serviceAccountName: {{ template "ph-ee-zeebe-ops.serviceAccount" . }}
      terminationGracePeriodSeconds: {{ .Values.zeebe_ops.terminationGracePeriod }}      

      containers:
        - name: ph-ee-zeebe-ops
          image: "{{ .Values.zeebe_ops.image }}:{{ .Values.zeebe_ops.imageTag }}"
          imagePullPolicy: "{{ .Values.zeebe_ops.imagePullPolicy }}"
          resources: {{ toYaml ( .Values.zeebe_ops.resources | default .Values.zeebe_ops.deployment.resources ) | nindent 10 }}
          ports:
            - containerPort: 5000
    {{- if .Values.imagePullSecrets }}
          imagePullSecrets:
    {{ toYaml .Values.zeebe_ops.imagePullSecrets | indent 8 }}
        {{- end }}            
          livenessProbe:
{{ toYaml .Values.zeebe_ops.livenessProbe | indent 10 }}
          readinessProbe:
{{ toYaml .Values.zeebe_ops.readinessProbe | indent 10 }}  
          env:
            - name: "ZEEBE_BROKER_CONTACTPOINT"
              value: "{{ .Values.zeebe_ops.zeebe_broker_contactpoint }}"
            - name: "TENANTS"
              value: "{{ .Values.zeebe_ops.tenants }}"
            - name: "elasticsearch_url"
              value: "{{ .Values.zeebe_ops.elasticsearch_url }}"
            - name: "LOGGING_LEVEL_ROOT"
              value:  "{{ .Values.zeebe_ops.LOGGING_LEVEL_ROOT }}"
            - name: "SPRING_DATA_ELASTICSEARCH_CLIENT_REACTIVE_ENDPOINTS"
              value: "{{ .Values.zeebe_ops.elasticsearch_contactpoint }}"
            - name: "ELASTICSEARCH_SECURITY_ENABLED"
              value: "{{ .Values.zeebe_ops.elasticsearch_security_enabled }}"
            - name: "ELASTICSEARCH_SSLVERIFICATION"
              value: "{{ .Values.zeebe_ops.elasticsearch_sslverification }}"
            - name: "ELASTICSEARCH_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: username
            - name: "ELASTICSEARCH_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: password
{{- if .Values.extraEnvs | default .Values.deployment.extraEnvs }}
{{ toYaml ( .Values.extraEnvs | default .Values.deployment.extraEnvs ) | indent 8 }}
{{- end }}
          envFrom: {{ toYaml ( .Values.zeebe_ops.envFrom | default .Values.zeebe_ops.deployment.envFrom ) | nindent 10 }}
          securityContext: {{ toYaml ( .Values.podSecurityContext | default .Values.deployment.securityContext ) | nindent 10 }}
          
        {{- if .Values.zeebe_ops.extraContainers }}
  {{ tpl .Values.zeebe_ops.extraContainers . | indent 6 }}
        {{- end }}

{{- end }}                  