# Deploy singleton instance in the whole cluster for some unique data sources, like aws input
{{- if .Values.notifications.enabled -}}

apiVersion: {{ .Values.deployment.apiversion }}
kind: Deployment
metadata:
  name: {{ template " ph-ee-connector-notifications.fullname" . }}
  labels:
    app: {{ template " ph-ee-connector-notifications.fullname" . }}
spec:
  replicas: {{ .Values.notifications.replicas }}
  selector:
    matchLabels:
      app: {{ template " ph-ee-connector-notifications.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template " ph-ee-connector-notifications.fullname" . }}
      annotations:
{{- if .Values.notifications.deployment.annotations }}
{{ toYaml .Values.notifications.deployment.annotations | indent 8 }}
{{- end }}
        # {{- if or  .Values.notificationsConfig .Values.deployment.message-gatewayConfig }}
        # configChecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        # {{- end }}
    spec:
      affinity: {{ toYaml .Values.notifications.deployment.affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Values.notifications.deployment.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml ( .Values.notifications.tolerations | default .Values.notifications.deployment.tolerations ) | nindent 8 }}
      {{- if .Values.notifications.priorityClassName }}
      priorityClassName: {{ .Values.notifications.priorityClassName  }}
      {{- end }}
      serviceAccountName: {{ template " ph-ee-connector-notifications.serviceAccount" . }}
      terminationGracePeriodSeconds: {{ .Values.notifications.terminationGracePeriod }}
      containers:
        - name: ph-ee-connector-notifications
          image: "{{ .Values.notifications.image }}:{{ .Values.notifications.imageTag }}"
          imagePullPolicy: "{{ .Values.notifications.imagePullPolicy }}"
          resources: {{ toYaml ( .Values.notifications.resources | default .Values.notifications.deployment.resources ) | nindent 10 }}
      {{- if .Values.notifications.imagePullSecrets }}
          imagePullSecrets:
    {{ toYaml .Values.notifications.imagePullSecrets | indent 8 }}
        {{- end }}
          livenessProbe:
{{ toYaml .Values.notifications.livenessProbe | indent 10 }}
          readinessProbe:
{{ toYaml .Values.notifications.readinessProbe | indent 10 }}
          ports:
           - containerPort: 5000
          
          env:
            - name: "SPRING_PROFILES_ACTIVE"
              value: "{{ .Values.notifications.SPRING_PROFILES_ACTIVE }}"
            - name: "ZEEBE_BROKER_CONTACTPOINT"
              value: "{{ .Values.notifications.zeebe_broker_contactpoint }}"
            - name: "HOSTCONFIG_HOST"
              value: "{{ .Values.notifications.hostconfig.host }}"
            - name: "HOSTCONFIG_PORT"
              value: "{{ .Values.notifications.hostconfig.port }}"
            - name: "MESSAGEGATEWAYCONFIG_HOST"
              value: "{{ .Values.notifications.MESSAGEGATEWAYCONFIG_HOST }}"
            - name: "NOTIFICATION_LOCAL_HOST"
              value: "{{ .Values.notifications.NOTIFICATION_LOCAL_HOST }}"
            - name: "NOTIFICATION_SUCCESS_ENABLED"
              value: "{{ .Values.notifications.NOTIFICATION_SUCCESS_ENABLED }}"
            - name: "NOTIFICATION_FAILURE_ENABLED"
              value: "{{ .Values.notifications.NOTIFICATION_FAILURE_ENABLED }}"
            - name: "LOGGING_LEVEL_ROOT"
              value:  "{{ .Values.notifications.LOGGING_LEVEL_ROOT }}"
{{- if .Values.notifications.extraEnvs | default .Values.notifications.deployment.extraEnvs }}
{{ toYaml ( .Values.notifications.extraEnvs | default .Values.notifications.deployment.extraEnvs ) | indent 8 }}
{{- end }}
          envFrom: {{ toYaml ( .Values.notifications.envFrom | default .Values.notifications.deployment.envFrom ) | nindent 10 }}
          securityContext: {{ toYaml ( .Values.notifications.podSecurityContext | default .Values.notifications.deployment.securityContext ) | nindent 10 }}

          volumeMounts:
            - name: ph-ee-config
              mountPath: "/config"
{{- if .Values.notifications.deployment.config }}
{{ toYaml .Values.notifications.deployment.config | indent 12 }}
{{- end }}            
      initContainers:
        - name: wait-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          args:
            - -timeout=120s
            - -wait
            - tcp://{{ .Values.operations_app.datasource.host }}:3306
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
    {{ tpl .Values.extraInitContainers . | indent 6 }}
          {{- else }}
    {{ toYaml .Values.extraInitContainers | indent 6 }}
          {{- end }}
          {{- end }}          
      volumes:
        - name: ph-ee-config
          configMap:
            name: ph-ee-config
     {{- if .Values.notifications.extraVolumeMounts | default .Values.notifications.deployment.extraVolumeMounts }}
  {{ toYaml ( .Values.notifications.extraVolumeMounts | default .Values.notifications.deployment.extraVolumeMounts ) | indent 8 }}
          {{- end }}
        {{- if .Values.notifications.extraContainers }}
  {{ tpl .Values.notifications.extraContainers . | indent 6 }}
        {{- end }}              
{{- end }}